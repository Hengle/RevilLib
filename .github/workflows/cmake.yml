name: build

on: [push]

env:
  BUILD_TYPE: Release
  ARCH: amd64

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: G++ 12 & GCOV
            CC: gcc-12
            CXX: g++-12
            use-gcov: true
          - name: Clang 13
            CC: clang-13
            CXX: clang++-13

    env:
      CC: ${{matrix.CC}}
      CXX: ${{matrix.CXX}}
      USE_GCOV: ${{matrix.use-gcov == true}}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure stuff
        run: |
          mkdir ${{github.workspace}}/build
          cd ${{github.workspace}}/build
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DUSE_GCOV=$USE_GCOV -DCMAKE_INSTALL_PREFIX=${{github.workspace}} ..

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: cmake --build .

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure

      - name: Upload coverage report
        working-directory: ${{github.workspace}}
        if: ${{matrix.use-gcov == true}}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.CoverallsToken }}
        run: |
          sudo apt install python3-setuptools python3-idna python3-requests python3-urllib3
          git clone https://github.com/PredatorCZ/cpp-coveralls.git
          pushd cpp-coveralls
          sudo python3 setup.py install
          popd
          export COVERALLS_SERVICE_NAME="gitlab-ci"
          coveralls -E ".*/build/.*.[ch]((pp)|(c)|(xx))?$" -e test -e 3rd_party --gcov-options '\-lp' > /dev/null

  build-widle:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Configure stuff
        run: |
          choco install ninja
          mkdir ${{github.workspace}}/build
          cd ${{github.workspace}}/build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{github.workspace}} ..
        env:
          CC: clang
          CXX: clang++
      - name: Build
        working-directory: ${{github.workspace}}/build
        run: |
          cmake --build . --target install

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure
